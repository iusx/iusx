[{"data":1,"prerenderedAt":1236},["Reactive",2],{"content-query-OZU5HXJWq3":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"director":9,"time":10,"img":11,"plan":12,"body":13,"_type":1231,"_id":1232,"_source":1233,"_file":1234,"_extension":1235},"/book/unicode-explained","book",false,"","Unicode Explained","Jukka K. Korpela","2025","11/1.png","0,71",{"type":14,"children":15,"toc":1227},"root",[16],{"type":17,"tag":18,"props":19,"children":24},"element","book-content",{":by":20,":img":21,":plan":22,":title":23},"director","img","plan","title",[25,30,75,84,100,104,111,115,169,181,186,203,206,212,216,250,258,288,296,301,309,311,637,685,706,714,717,724,728,729,1004,1009,1017,1040,1042,1130,1143,1151,1156,1172,1199],{"type":17,"tag":26,"props":27,"children":29},"text-title",{"t":28},"为什么要看这本书？",[],{"type":17,"tag":31,"props":32,"children":33},"p",{},[34,37,44,46,52,54,60,62,67,69],{"type":35,"value":36},"text","起因是在 neovim 群中看到了群友的名字是 ",{"type":17,"tag":38,"props":39,"children":41},"code",{"className":40},[],[42],{"type":35,"value":43},"panic!(\"\")",{"type":35,"value":45}," 每次 @ 他的时候文字都会被 ",{"type":17,"tag":38,"props":47,"children":49},{"className":48},[],[50],{"type":35,"value":51},"\"\"",{"type":35,"value":53}," 包裹起来。",{"type":17,"tag":38,"props":55,"children":57},{"className":56},[],[58],{"type":35,"value":59},"@panic!(\"类似你看到的这个情况，这个问题不仅是在群组，就算在浏览器、终端环境下都是存在的。\")",{"type":35,"value":61}," 实际上我并没有将文字写在 ",{"type":17,"tag":38,"props":63,"children":65},{"className":64},[],[66],{"type":35,"value":51},{"type":35,"value":68}," 中，而是默认这样的，这个用到的就是 ",{"type":17,"tag":38,"props":70,"children":72},{"className":71},[],[73],{"type":35,"value":74},"U+2067",{"type":17,"tag":76,"props":77,"children":79},"pre",{"code":78},"panic!(\"\\U+2067\")\n",[80],{"type":17,"tag":38,"props":81,"children":82},{"__ignoreMap":7},[83],{"type":35,"value":78},{"type":17,"tag":31,"props":85,"children":86},{},[87,89,98],{"type":35,"value":88},"不过 unicode 在日常生活中是经常应用的, 比如在 bilibili 就经常有用 Unicode 字符来弄一些标题，例如: 𝑾𝒆 𝑨𝒓𝒆 𝑳𝒐𝒔𝒆𝒓、𝓦𝓮 𝓐𝓻𝓮 𝓛𝓸𝓼𝓮𝓻 显得与众不同，有时候也会有歌名用 unicode 字符显得比较独特。这些都可以通过 ",{"type":17,"tag":90,"props":91,"children":95},"a",{"href":92,"rel":93},"https://qaz.wtf/u/convert.cgi?text=We+Are+Loser",[94],"nofollow",[96],{"type":35,"value":97},"Unicode Text Converter",{"type":35,"value":99}," 来进行生成和转换。",{"type":17,"tag":101,"props":102,"children":103},"hr",{},[],{"type":17,"tag":105,"props":106,"children":108},"h1",{"id":107},"trojan-source-1",[109],{"type":35,"value":110},"Trojan Source 1",{"type":17,"tag":26,"props":112,"children":114},{"t":113},"Trojan Source",[],{"type":17,"tag":31,"props":116,"children":117},{},[118,120,127,129,135,137,144,146,153,155,160,162,167],{"type":35,"value":119},"所以我尝试 Google 了很多次，但都是搜索不到相关的，更多的是 rust 和 go 相关的结果。之后",{"type":17,"tag":90,"props":121,"children":124},{"href":122,"rel":123},"https://github.com/liinyun",[94],[125],{"type":35,"value":126},"灵云",{"type":35,"value":128},"说这是 ",{"type":17,"tag":130,"props":131,"children":132},"strong",{},[133],{"type":35,"value":134},"UTF-8的奇妙魔力",{"type":35,"value":136},"，我才详细的了解了 unicode。并且找到了一个非常有趣的 CVE 编号，即 ",{"type":17,"tag":90,"props":138,"children":141},{"href":139,"rel":140},"https://nvd.nist.gov/vuln/detail/CVE-2021-42574",[94],[142],{"type":35,"value":143},"CVE-2021-42574",{"type":35,"value":145}," 这种类似的缺陷叫作 ",{"type":17,"tag":90,"props":147,"children":150},{"href":148,"rel":149},"https://en.wikipedia.org/wiki/Trojan_Source",[94],[151],{"type":35,"value":152},"\"Trojan Source\"",{"type":35,"value":154},"，中文直译就是 ",{"type":17,"tag":130,"props":156,"children":157},{},[158],{"type":35,"value":159},"木马来源",{"type":35,"value":161},"，泛指 ",{"type":17,"tag":130,"props":163,"children":164},{},[165],{"type":35,"value":166},"不可见的漏洞",{"type":35,"value":168},"。",{"type":17,"tag":31,"props":170,"children":171},{},[172,174,179],{"type":35,"value":173},"维基百科的解释是：\"它滥用 Unicode 的双向字符来显示源代码 ，而不是源代码的实际执行。",{"type":17,"tag":130,"props":175,"children":176},{},[177],{"type":35,"value":178},"该漏洞利用了不同阅读方向的书写脚本在计算机上的显示和编码方式。",{"type":35,"value":180},"\" 根据维基百科提供的详细信息，貌似可以快速入门 unicode。但我的计划是先阅读这本书，了解 unicode 做什么，有什么用在进一步学习。",{"type":17,"tag":31,"props":182,"children":183},{},[184],{"type":35,"value":185},"有趣的是，这一 CVE 影响了类似所有使用 Unicode 规范的环境，例如 Github。如果提交的信息包含 unicode code，那么会有一个警告：",{"type":17,"tag":187,"props":188,"children":190},"text-tip",{"type":189},"big",[191],{"type":17,"tag":31,"props":192,"children":193},{},[194,196],{"type":35,"value":195},"This diff contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. ",{"type":17,"tag":90,"props":197,"children":200},{"href":198,"rel":199},"https://github.blog/changelog/2021-10-31-warning-about-bidirectional-unicode-text/",[94],[201],{"type":35,"value":202},"Learn more about bidirectional Unicode characters",{"type":17,"tag":101,"props":204,"children":205},{},[],{"type":17,"tag":105,"props":207,"children":209},{"id":208},"转义-3",[210],{"type":35,"value":211},"转义 3",{"type":17,"tag":26,"props":213,"children":215},{"t":214},"Unicode 转义序列",[],{"type":17,"tag":31,"props":217,"children":218},{},[219,221,228,230,235,237,248],{"type":35,"value":220},"Unicode 转义序列又称之为 Escaped Unicode characters, 可以参考 ",{"type":17,"tag":90,"props":222,"children":225},{"href":223,"rel":224},"https://en.wikipedia.org/wiki/Escape_character",[94],[226],{"type":35,"value":227},"Escape character ",{"type":35,"value":229}," ",{"type":17,"tag":130,"props":231,"children":232},{},[233],{"type":35,"value":234},"。就是说将一个字符转义成另一个编码",{"type":35,"value":236}," 的过程, 基于 Unicode 的各种编码，可以做很多事情。这也意味着需要做很多类似转义的操作，可以用在线工具或 code lang 来完成这个过程，如使用 PY 的 ",{"type":17,"tag":90,"props":238,"children":241},{"href":239,"rel":240},"https://docs.python.org/3/howto/unicode.html",[94],[242],{"type":17,"tag":38,"props":243,"children":245},{"className":244},[],[246],{"type":35,"value":247},"s.encode",{"type":35,"value":249}," 对象方法：",{"type":17,"tag":76,"props":251,"children":253},{"code":252},"s = '你好'\nunicode_str = s.encode('unicode_escape').decode()\nprint(unicode_str)  # 输出: \\u4f60\\u597d\n",[254],{"type":17,"tag":38,"props":255,"children":256},{"__ignoreMap":7},[257],{"type":35,"value":252},{"type":17,"tag":31,"props":259,"children":260},{},[261,263,269,271,278,280,286],{"type":35,"value":262},"之后，我们拿到 ",{"type":17,"tag":38,"props":264,"children":266},{"className":265},[],[267],{"type":35,"value":268},"\\u4f60\\u597d",{"type":35,"value":270}," 到 ",{"type":17,"tag":90,"props":272,"children":275},{"href":273,"rel":274},"https://gchq.github.io/CyberChef/",[94],[276],{"type":35,"value":277},"CyberChef",{"type":35,"value":279}," 来进行添加 Unicode 字符，之后将 output 结果 copy 到剪贴板中即可使用（需要添加 ",{"type":17,"tag":38,"props":281,"children":283},{"className":282},[],[284],{"type":35,"value":285},"Unescape string",{"type":35,"value":287}," 模块）例如：",{"type":17,"tag":76,"props":289,"children":291},{"code":290},"\\u5b87\\u5b99\\u65e0\\u654c\\u67e0\\u6aac\\u738b\\u2067\\uD83C\\uDF4B\n",[292],{"type":17,"tag":38,"props":293,"children":294},{"__ignoreMap":7},[295],{"type":35,"value":290},{"type":17,"tag":31,"props":297,"children":298},{},[299],{"type":35,"value":300},"这是是一串 Unicode 字符，转义成字符串就是：",{"type":17,"tag":76,"props":302,"children":304},{"code":303},"宇宙无敌柠檬王⁧🍋\n",[305],{"type":17,"tag":38,"props":306,"children":307},{"__ignoreMap":7},[308],{"type":35,"value":303},{"type":35,"value":310},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":17,"tag":312,"props":313,"children":314},"table",{},[315,349],{"type":17,"tag":316,"props":317,"children":318},"thead",{},[319],{"type":17,"tag":320,"props":321,"children":322},"tr",{},[323,329,334,339,344],{"type":17,"tag":324,"props":325,"children":326},"th",{},[327],{"type":35,"value":328},"字符",{"type":17,"tag":324,"props":330,"children":331},{},[332],{"type":35,"value":333},"名称",{"type":17,"tag":324,"props":335,"children":336},{},[337],{"type":35,"value":338},"类型",{"type":17,"tag":324,"props":340,"children":341},{},[342],{"type":35,"value":343},"bidi 类别",{"type":17,"tag":324,"props":345,"children":346},{},[347],{"type":35,"value":348},"简介说明",{"type":17,"tag":350,"props":351,"children":352},"tbody",{},[353,382,417,450,484,517,544,577,610],{"type":17,"tag":320,"props":354,"children":355},{},[356,362,367,372,377],{"type":17,"tag":357,"props":358,"children":359},"td",{},[360],{"type":35,"value":361},"u+200e",{"type":17,"tag":357,"props":363,"children":364},{},[365],{"type":35,"value":366},"left-to-right mark (lrm)",{"type":17,"tag":357,"props":368,"children":369},{},[370],{"type":35,"value":371},"cf",{"type":17,"tag":357,"props":373,"children":374},{},[375],{"type":35,"value":376},"l",{"type":17,"tag":357,"props":378,"children":379},{},[380],{"type":35,"value":381},"插入一个不可见的 ltr 方向提示符",{"type":17,"tag":320,"props":383,"children":384},{},[385,390,395,399,404],{"type":17,"tag":357,"props":386,"children":387},{},[388],{"type":35,"value":389},"u+202a",{"type":17,"tag":357,"props":391,"children":392},{},[393],{"type":35,"value":394},"left-to-right embedding (lre)",{"type":17,"tag":357,"props":396,"children":397},{},[398],{"type":35,"value":371},{"type":17,"tag":357,"props":400,"children":401},{},[402],{"type":35,"value":403},"lre",{"type":17,"tag":357,"props":405,"children":406},{},[407,409,415],{"type":35,"value":408},"开始一个嵌入式 ltr 片段，需 ",{"type":17,"tag":38,"props":410,"children":412},{"className":411},[],[413],{"type":35,"value":414},"pdf",{"type":35,"value":416}," 结束",{"type":17,"tag":320,"props":418,"children":419},{},[420,425,430,434,439],{"type":17,"tag":357,"props":421,"children":422},{},[423],{"type":35,"value":424},"u+202d",{"type":17,"tag":357,"props":426,"children":427},{},[428],{"type":35,"value":429},"left-to-right override (lro)",{"type":17,"tag":357,"props":431,"children":432},{},[433],{"type":35,"value":371},{"type":17,"tag":357,"props":435,"children":436},{},[437],{"type":35,"value":438},"lro",{"type":17,"tag":357,"props":440,"children":441},{},[442,444,449],{"type":35,"value":443},"强制后续文本以 ltr 显示，需 ",{"type":17,"tag":38,"props":445,"children":447},{"className":446},[],[448],{"type":35,"value":414},{"type":35,"value":416},{"type":17,"tag":320,"props":451,"children":452},{},[453,458,463,467,472],{"type":17,"tag":357,"props":454,"children":455},{},[456],{"type":35,"value":457},"u+2066",{"type":17,"tag":357,"props":459,"children":460},{},[461],{"type":35,"value":462},"left-to-right isolate (lri)",{"type":17,"tag":357,"props":464,"children":465},{},[466],{"type":35,"value":371},{"type":17,"tag":357,"props":468,"children":469},{},[470],{"type":35,"value":471},"lri",{"type":17,"tag":357,"props":473,"children":474},{},[475,477,483],{"type":35,"value":476},"开始 ltr 隔离段，推荐用法，需 ",{"type":17,"tag":38,"props":478,"children":480},{"className":479},[],[481],{"type":35,"value":482},"pdi",{"type":35,"value":416},{"type":17,"tag":320,"props":485,"children":486},{},[487,492,497,501,506],{"type":17,"tag":357,"props":488,"children":489},{},[490],{"type":35,"value":491},"u+2067",{"type":17,"tag":357,"props":493,"children":494},{},[495],{"type":35,"value":496},"right-to-left isolate (rli)",{"type":17,"tag":357,"props":498,"children":499},{},[500],{"type":35,"value":371},{"type":17,"tag":357,"props":502,"children":503},{},[504],{"type":35,"value":505},"rli",{"type":17,"tag":357,"props":507,"children":508},{},[509,511,516],{"type":35,"value":510},"开始 rtl 隔离段，推荐用法，需 ",{"type":17,"tag":38,"props":512,"children":514},{"className":513},[],[515],{"type":35,"value":482},{"type":35,"value":416},{"type":17,"tag":320,"props":518,"children":519},{},[520,525,530,534,539],{"type":17,"tag":357,"props":521,"children":522},{},[523],{"type":35,"value":524},"u+200f",{"type":17,"tag":357,"props":526,"children":527},{},[528],{"type":35,"value":529},"right-to-left mark (rlm)",{"type":17,"tag":357,"props":531,"children":532},{},[533],{"type":35,"value":371},{"type":17,"tag":357,"props":535,"children":536},{},[537],{"type":35,"value":538},"r",{"type":17,"tag":357,"props":540,"children":541},{},[542],{"type":35,"value":543},"插入一个不可见的 rtl 方向提示符",{"type":17,"tag":320,"props":545,"children":546},{},[547,552,557,561,566],{"type":17,"tag":357,"props":548,"children":549},{},[550],{"type":35,"value":551},"u+202b",{"type":17,"tag":357,"props":553,"children":554},{},[555],{"type":35,"value":556},"right-to-left embedding (rle)",{"type":17,"tag":357,"props":558,"children":559},{},[560],{"type":35,"value":371},{"type":17,"tag":357,"props":562,"children":563},{},[564],{"type":35,"value":565},"rle",{"type":17,"tag":357,"props":567,"children":568},{},[569,571,576],{"type":35,"value":570},"开始一个嵌入式 rtl 片段，需 ",{"type":17,"tag":38,"props":572,"children":574},{"className":573},[],[575],{"type":35,"value":414},{"type":35,"value":416},{"type":17,"tag":320,"props":578,"children":579},{},[580,585,590,594,599],{"type":17,"tag":357,"props":581,"children":582},{},[583],{"type":35,"value":584},"u+202e",{"type":17,"tag":357,"props":586,"children":587},{},[588],{"type":35,"value":589},"right-to-left override (rlo)",{"type":17,"tag":357,"props":591,"children":592},{},[593],{"type":35,"value":371},{"type":17,"tag":357,"props":595,"children":596},{},[597],{"type":35,"value":598},"rlo",{"type":17,"tag":357,"props":600,"children":601},{},[602,604,609],{"type":35,"value":603},"强制后续文本以 rtl 显示，需 ",{"type":17,"tag":38,"props":605,"children":607},{"className":606},[],[608],{"type":35,"value":414},{"type":35,"value":416},{"type":17,"tag":320,"props":611,"children":612},{},[613,618,623,628,632],{"type":17,"tag":357,"props":614,"children":615},{},[616],{"type":35,"value":617},"u+1bc77",{"type":17,"tag":357,"props":619,"children":620},{},[621],{"type":35,"value":622},"duployan affix attached... (略)",{"type":17,"tag":357,"props":624,"children":625},{},[626],{"type":35,"value":627},"lo",{"type":17,"tag":357,"props":629,"children":630},{},[631],{"type":35,"value":376},{"type":17,"tag":357,"props":633,"children":634},{},[635],{"type":35,"value":636},"杜波洛扬速记字符，天然 ltr，可显示",{"type":17,"tag":31,"props":638,"children":639},{},[640,642,648,650,657,659,665,667,674,676,683],{"type":35,"value":641},"像是 ",{"type":17,"tag":38,"props":643,"children":645},{"className":644},[],[646],{"type":35,"value":647},"\\u5b87",{"type":35,"value":649}," 这种的，一般称之为 ",{"type":17,"tag":90,"props":651,"children":654},{"href":652,"rel":653},"https://en.wikipedia.org/wiki/UTF-16",[94],[655],{"type":35,"value":656},"UTF-16",{"type":35,"value":658},",在上面的 Unicode 字符中，",{"type":17,"tag":38,"props":660,"children":662},{"className":661},[],[663],{"type":35,"value":664},"u2066",{"type":35,"value":666}," 这个系 ",{"type":17,"tag":90,"props":668,"children":671},{"href":669,"rel":670},"https://www.compart.com/en/unicode/U+2066#UNC_DB",[94],[672],{"type":35,"value":673},"LEFT-TO-RIGHT",{"type":35,"value":675}," 这个序列的，根据维基百科 ",{"type":17,"tag":90,"props":677,"children":680},{"href":678,"rel":679},"https://en.wikipedia.org/wiki/Bidirectional_text",[94],[681],{"type":35,"value":682},"Bidirectional text",{"type":35,"value":684}," 的介绍，这种被称之为 “双向文本”, 用于波斯语和阿拉伯语甚至是数学表达式。",{"type":17,"tag":31,"props":686,"children":687},{},[688,690,696,698,704],{"type":35,"value":689},"由于用了 ",{"type":17,"tag":38,"props":691,"children":693},{"className":692},[],[694],{"type":35,"value":695},"u2067",{"type":35,"value":697},", 这会导致渲染的时候会隔断 ",{"type":17,"tag":38,"props":699,"children":701},{"className":700},[],[702],{"type":35,"value":703},"🍋",{"type":35,"value":705},"，别人 @ 我的时候就会夹着消息，比如 @ 我的时候输入 Hello 就会变成：",{"type":17,"tag":76,"props":707,"children":709},{"code":708},"@宇宙无敌柠檬王 Hello 🍋\n---如果是正常的\n@宇宙无敌柠檬王🍋 Hello\n",[710],{"type":17,"tag":38,"props":711,"children":712},{"__ignoreMap":7},[713],{"type":35,"value":708},{"type":17,"tag":101,"props":715,"children":716},{},[],{"type":17,"tag":718,"props":719,"children":721},"h2",{"id":720},"字符格式-2",[722],{"type":35,"value":723},"字符格式 2",{"type":17,"tag":26,"props":725,"children":727},{"t":726},"字符格式",[],{"type":35,"value":310},{"type":17,"tag":312,"props":730,"children":731},{},[732,758],{"type":17,"tag":316,"props":733,"children":734},{},[735],{"type":17,"tag":320,"props":736,"children":737},{},[738,742,746,750,754],{"type":17,"tag":324,"props":739,"children":740},{},[741],{"type":35,"value":328},{"type":17,"tag":324,"props":743,"children":744},{},[745],{"type":35,"value":333},{"type":17,"tag":324,"props":747,"children":748},{},[749],{"type":35,"value":338},{"type":17,"tag":324,"props":751,"children":752},{},[753],{"type":35,"value":343},{"type":17,"tag":324,"props":755,"children":756},{},[757],{"type":35,"value":348},{"type":17,"tag":350,"props":759,"children":760},{},[761,784,813,842,871,900,923,952,981],{"type":17,"tag":320,"props":762,"children":763},{},[764,768,772,776,780],{"type":17,"tag":357,"props":765,"children":766},{},[767],{"type":35,"value":361},{"type":17,"tag":357,"props":769,"children":770},{},[771],{"type":35,"value":366},{"type":17,"tag":357,"props":773,"children":774},{},[775],{"type":35,"value":371},{"type":17,"tag":357,"props":777,"children":778},{},[779],{"type":35,"value":376},{"type":17,"tag":357,"props":781,"children":782},{},[783],{"type":35,"value":381},{"type":17,"tag":320,"props":785,"children":786},{},[787,791,795,799,803],{"type":17,"tag":357,"props":788,"children":789},{},[790],{"type":35,"value":389},{"type":17,"tag":357,"props":792,"children":793},{},[794],{"type":35,"value":394},{"type":17,"tag":357,"props":796,"children":797},{},[798],{"type":35,"value":371},{"type":17,"tag":357,"props":800,"children":801},{},[802],{"type":35,"value":403},{"type":17,"tag":357,"props":804,"children":805},{},[806,807,812],{"type":35,"value":408},{"type":17,"tag":38,"props":808,"children":810},{"className":809},[],[811],{"type":35,"value":414},{"type":35,"value":416},{"type":17,"tag":320,"props":814,"children":815},{},[816,820,824,828,832],{"type":17,"tag":357,"props":817,"children":818},{},[819],{"type":35,"value":424},{"type":17,"tag":357,"props":821,"children":822},{},[823],{"type":35,"value":429},{"type":17,"tag":357,"props":825,"children":826},{},[827],{"type":35,"value":371},{"type":17,"tag":357,"props":829,"children":830},{},[831],{"type":35,"value":438},{"type":17,"tag":357,"props":833,"children":834},{},[835,836,841],{"type":35,"value":443},{"type":17,"tag":38,"props":837,"children":839},{"className":838},[],[840],{"type":35,"value":414},{"type":35,"value":416},{"type":17,"tag":320,"props":843,"children":844},{},[845,849,853,857,861],{"type":17,"tag":357,"props":846,"children":847},{},[848],{"type":35,"value":457},{"type":17,"tag":357,"props":850,"children":851},{},[852],{"type":35,"value":462},{"type":17,"tag":357,"props":854,"children":855},{},[856],{"type":35,"value":371},{"type":17,"tag":357,"props":858,"children":859},{},[860],{"type":35,"value":471},{"type":17,"tag":357,"props":862,"children":863},{},[864,865,870],{"type":35,"value":476},{"type":17,"tag":38,"props":866,"children":868},{"className":867},[],[869],{"type":35,"value":482},{"type":35,"value":416},{"type":17,"tag":320,"props":872,"children":873},{},[874,878,882,886,890],{"type":17,"tag":357,"props":875,"children":876},{},[877],{"type":35,"value":491},{"type":17,"tag":357,"props":879,"children":880},{},[881],{"type":35,"value":496},{"type":17,"tag":357,"props":883,"children":884},{},[885],{"type":35,"value":371},{"type":17,"tag":357,"props":887,"children":888},{},[889],{"type":35,"value":505},{"type":17,"tag":357,"props":891,"children":892},{},[893,894,899],{"type":35,"value":510},{"type":17,"tag":38,"props":895,"children":897},{"className":896},[],[898],{"type":35,"value":482},{"type":35,"value":416},{"type":17,"tag":320,"props":901,"children":902},{},[903,907,911,915,919],{"type":17,"tag":357,"props":904,"children":905},{},[906],{"type":35,"value":524},{"type":17,"tag":357,"props":908,"children":909},{},[910],{"type":35,"value":529},{"type":17,"tag":357,"props":912,"children":913},{},[914],{"type":35,"value":371},{"type":17,"tag":357,"props":916,"children":917},{},[918],{"type":35,"value":538},{"type":17,"tag":357,"props":920,"children":921},{},[922],{"type":35,"value":543},{"type":17,"tag":320,"props":924,"children":925},{},[926,930,934,938,942],{"type":17,"tag":357,"props":927,"children":928},{},[929],{"type":35,"value":551},{"type":17,"tag":357,"props":931,"children":932},{},[933],{"type":35,"value":556},{"type":17,"tag":357,"props":935,"children":936},{},[937],{"type":35,"value":371},{"type":17,"tag":357,"props":939,"children":940},{},[941],{"type":35,"value":565},{"type":17,"tag":357,"props":943,"children":944},{},[945,946,951],{"type":35,"value":570},{"type":17,"tag":38,"props":947,"children":949},{"className":948},[],[950],{"type":35,"value":414},{"type":35,"value":416},{"type":17,"tag":320,"props":953,"children":954},{},[955,959,963,967,971],{"type":17,"tag":357,"props":956,"children":957},{},[958],{"type":35,"value":584},{"type":17,"tag":357,"props":960,"children":961},{},[962],{"type":35,"value":589},{"type":17,"tag":357,"props":964,"children":965},{},[966],{"type":35,"value":371},{"type":17,"tag":357,"props":968,"children":969},{},[970],{"type":35,"value":598},{"type":17,"tag":357,"props":972,"children":973},{},[974,975,980],{"type":35,"value":603},{"type":17,"tag":38,"props":976,"children":978},{"className":977},[],[979],{"type":35,"value":414},{"type":35,"value":416},{"type":17,"tag":320,"props":982,"children":983},{},[984,988,992,996,1000],{"type":17,"tag":357,"props":985,"children":986},{},[987],{"type":35,"value":617},{"type":17,"tag":357,"props":989,"children":990},{},[991],{"type":35,"value":622},{"type":17,"tag":357,"props":993,"children":994},{},[995],{"type":35,"value":627},{"type":17,"tag":357,"props":997,"children":998},{},[999],{"type":35,"value":376},{"type":17,"tag":357,"props":1001,"children":1002},{},[1003],{"type":35,"value":636},{"type":17,"tag":31,"props":1005,"children":1006},{},[1007],{"type":35,"value":1008},"如果只看上面的这些描述，或者说 Unicode 的标准原文。那您肯定有很多疑惑，看不懂各种缩写，感觉超级高端和高攀不起。上面图表的原文是：",{"type":17,"tag":76,"props":1010,"children":1012},{"code":1011},"--- LEFT-TO-RIGHT\n200E;LEFT-TO-RIGHT MARK;Cf;0;L;;;;;N;;;;;\n202A;LEFT-TO-RIGHT EMBEDDING;Cf;0;LRE;;;;;N;;;;;\n202D;LEFT-TO-RIGHT OVERRIDE;Cf;0;LRO;;;;;N;;;;;\n2066;LEFT-TO-RIGHT ISOLATE;Cf;0;LRI;;;;;N;;;;;\n1BC77;DUPLOYAN AFFIX ATTACHED LEFT-TO-RIGHT SECANT;Lo;0;L;;;;;N;;;;;\n\n--- RIGHT-TO-LEFT\n2067;RIGHT-TO-LEFT ISOLATE;Cf;0;RLI;;;;;N;;;;;\n200F;RIGHT-TO-LEFT MARK;Cf;0;R;;;;;N;;;;;\n202B;RIGHT-TO-LEFT EMBEDDING;Cf;0;RLE;;;;;N;;;;;\n202E;RIGHT-TO-LEFT OVERRIDE;Cf;0;RLO;;;;;N;;;;;\n",[1013],{"type":17,"tag":38,"props":1014,"children":1015},{"__ignoreMap":7},[1016],{"type":35,"value":1011},{"type":17,"tag":31,"props":1018,"children":1019},{},[1020,1022,1029,1031,1038],{"type":35,"value":1021},"这些数据来自 ",{"type":17,"tag":90,"props":1023,"children":1026},{"href":1024,"rel":1025},"https://www.unicode.org/Public/UNIDATA/UnicodeData.txt",[94],[1027],{"type":35,"value":1028},"Unicode Character Database",{"type":35,"value":1030}," 也就是 Unicode 字符库。这些字段结构在 ",{"type":17,"tag":90,"props":1032,"children":1035},{"href":1033,"rel":1034},"https://www.unicode.org/reports/tr44/#UnicodeData.txt",[94],[1036],{"type":35,"value":1037},"UDC:Unicode® Standard Annex #44",{"type":35,"value":1039}," 中皆有说明（除非是 Unicode 相关行业的，否则需要一个一个对照。或许我会写一个转换器？)",{"type":35,"value":1041},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":17,"tag":312,"props":1043,"children":1044},{},[1045,1066],{"type":17,"tag":316,"props":1046,"children":1047},{},[1048],{"type":17,"tag":320,"props":1049,"children":1050},{},[1051,1056,1061],{"type":17,"tag":324,"props":1052,"children":1053},{},[1054],{"type":35,"value":1055},"Project",{"type":17,"tag":324,"props":1057,"children":1058},{},[1059],{"type":35,"value":1060},"Info",{"type":17,"tag":324,"props":1062,"children":1063},{},[1064],{"type":35,"value":1065},"Title",{"type":17,"tag":350,"props":1067,"children":1068},{},[1069,1085,1107],{"type":17,"tag":320,"props":1070,"children":1071},{},[1072,1077,1082],{"type":17,"tag":357,"props":1073,"children":1074},{},[1075],{"type":35,"value":1076},"数据来源",{"type":17,"tag":357,"props":1078,"children":1079},{},[1080],{"type":35,"value":1081},"UnicodeData.txt",{"type":17,"tag":357,"props":1083,"children":1084},{},[],{"type":17,"tag":320,"props":1086,"children":1087},{},[1088,1093,1102],{"type":17,"tag":357,"props":1089,"children":1090},{},[1091],{"type":35,"value":1092},"格式说明",{"type":17,"tag":357,"props":1094,"children":1095},{},[1096],{"type":17,"tag":90,"props":1097,"children":1099},{"href":1033,"rel":1098},[94],[1100],{"type":35,"value":1101},"Unicode® Standard Annex #44",{"type":17,"tag":357,"props":1103,"children":1104},{},[1105],{"type":35,"value":1106},"看懂 Unicode 的神奇魔法",{"type":17,"tag":320,"props":1108,"children":1109},{},[1110,1115,1125],{"type":17,"tag":357,"props":1111,"children":1112},{},[1113],{"type":35,"value":1114},"Bidi 类别",{"type":17,"tag":357,"props":1116,"children":1117},{},[1118],{"type":17,"tag":90,"props":1119,"children":1122},{"href":1120,"rel":1121},"https://www.unicode.org/reports/tr9/",[94],[1123],{"type":35,"value":1124},"Unicode® Standard Annex #9",{"type":17,"tag":357,"props":1126,"children":1127},{},[1128],{"type":35,"value":1129},"Unicode Bidirectional Algorithm 双向算法: 如何正确的显示从左还是从右到左的内容",{"type":17,"tag":31,"props":1131,"children":1132},{},[1133,1135,1141],{"type":35,"value":1134},"由于实在是太多了，以 ",{"type":17,"tag":38,"props":1136,"children":1138},{"className":1137},[],[1139],{"type":35,"value":1140},"200E;LEFT-TO-RIGHT MARK;Cf;0;L;;;;;N;;;;;",{"type":35,"value":1142}," 为例，如果要读懂，先拆分以更好的理解：",{"type":17,"tag":76,"props":1144,"children":1146},{"code":1145},"                                   200E;LEFT-TO-RIGHT MARK;Cf;0;L;;;;;N;;;;;\n                      Code Point-> |  200E;                                 \n      Implicit Directional Marks-> +---->  LEFT-TO-RIGHT MARK;              \n         General_Category Values-> +---->  Cf;                              \nCanonical Combining Class Values-> +---->  0;                               \n   Bidirectional Character Types->-+--+->  L;;;;;                           \n                        Bidi_Mirrored +->  N;;;;;                           \n",[1147],{"type":17,"tag":38,"props":1148,"children":1149},{"__ignoreMap":7},[1150],{"type":35,"value":1145},{"type":17,"tag":31,"props":1152,"children":1153},{},[1154],{"type":35,"value":1155},"一般需要将 #44 和 #9 切换起来查询才能理解，所以真的很需要一个转义的工具（我打算自己写一个），上面列出了一个字符格式的拆分，以及这些缩写属于那些部分的内容。一句话概述这个字符那就是：",{"type":17,"tag":187,"props":1157,"children":1158},{"type":189},[1159],{"type":17,"tag":31,"props":1160,"children":1161},{},[1162,1164,1170],{"type":35,"value":1163},"U200E 是一个",{"type":17,"tag":1165,"props":1166,"children":1167},"span",{},[1168],{"type":35,"value":1169},"从左到右的(格式控制字符)",{"type":35,"value":1171}," 尽管自身并不显示",{"type":17,"tag":1173,"props":1174,"children":1176},"text-space",{"type":1175},"tip",[1177,1191],{"type":17,"tag":31,"props":1178,"children":1179},{},[1180,1182,1186,1189],{"type":35,"value":1181},"数据文件 UnicodeData.txt 在每条记录中定义了多个属性值。\n当某个字段为空（即两个分号之间没有值）时，表示该属性使用该码点的默认值。",{"type":17,"tag":1183,"props":1184,"children":1185},"br",{},[],{"type":17,"tag":1183,"props":1187,"children":1188},{},[],{"type":35,"value":1190},"\nThe data file UnicodeData.txt defines many property values in each record.\nWhen a field in a data line for a code point is empty, that indicates that the property takes the default value for that code point.\nFor example:",{"type":17,"tag":31,"props":1192,"children":1193},{},[1194],{"type":17,"tag":38,"props":1195,"children":1196},{},[1197],{"type":35,"value":1198},"0022;QUOTATION MARK;Po;0;ON;;;;;N;;;;;",{"type":17,"tag":31,"props":1200,"children":1201},{},[1202,1204,1210,1212,1218,1220,1225],{"type":35,"value":1203},"我知道你肯定会在意 ",{"type":17,"tag":38,"props":1205,"children":1207},{"className":1206},[],[1208],{"type":35,"value":1209},"L;;;;;",{"type":35,"value":1211}," 中为什么这么多 ",{"type":17,"tag":38,"props":1213,"children":1215},{"className":1214},[],[1216],{"type":35,"value":1217},";;;",{"type":35,"value":1219}," 是不是有什么特殊含义？在 #44 中的 Empty Fields 部分说明了一些愿意，也就是说这些 ",{"type":17,"tag":38,"props":1221,"children":1223},{"className":1222},[],[1224],{"type":35,"value":1217},{"type":35,"value":1226}," 空的字段默认值：",{"title":7,"searchDepth":1228,"depth":1228,"links":1229},2,[1230],{"id":720,"depth":1228,"text":723},"markdown","content:book:unicode-explained.md","content","book/unicode-explained.md","md",1747490023979]