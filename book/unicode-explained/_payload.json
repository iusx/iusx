[{"data":1,"prerenderedAt":1245},["Reactive",2],{"content-query-OZU5HXJWq3":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"director":9,"time":10,"img":11,"plan":12,"body":13,"_type":1240,"_id":1241,"_source":1242,"_file":1243,"_extension":1244},"/book/unicode-explained","book",false,"","Unicode Explained","Jukka K. Korpela","2025","11/1.png","0,71",{"type":14,"children":15,"toc":1236},"root",[16],{"type":17,"tag":18,"props":19,"children":24},"element","book-content",{":by":20,":img":21,":plan":22,":title":23},"director","img","plan","title",[25,30,75,84,100,104,111,115,169,181,195,212,215,221,225,259,267,297,305,310,318,320,646,694,715,723,726,733,737,738,1013,1018,1026,1049,1051,1139,1152,1160,1165,1181,1208],{"type":17,"tag":26,"props":27,"children":29},"text-title",{"t":28},"为什么要看这本书？",[],{"type":17,"tag":31,"props":32,"children":33},"p",{},[34,37,44,46,52,54,60,62,67,69],{"type":35,"value":36},"text","起因是在 neovim 群中看到了群友的名字是 ",{"type":17,"tag":38,"props":39,"children":41},"code",{"className":40},[],[42],{"type":35,"value":43},"panic!(\"\")",{"type":35,"value":45}," 每次 @ 他的时候文字都会被 ",{"type":17,"tag":38,"props":47,"children":49},{"className":48},[],[50],{"type":35,"value":51},"\"\"",{"type":35,"value":53}," 包裹起来。",{"type":17,"tag":38,"props":55,"children":57},{"className":56},[],[58],{"type":35,"value":59},"@panic!(\"类似你看到的这个情况，这个问题不仅是在群组，就算在浏览器、终端环境下都是存在的。\")",{"type":35,"value":61}," 实际上我并没有将文字写在 ",{"type":17,"tag":38,"props":63,"children":65},{"className":64},[],[66],{"type":35,"value":51},{"type":35,"value":68}," 中，而是默认这样的，这个用到的就是 ",{"type":17,"tag":38,"props":70,"children":72},{"className":71},[],[73],{"type":35,"value":74},"U+2067",{"type":17,"tag":76,"props":77,"children":79},"pre",{"code":78},"panic!(\"\\U+2067\")\n",[80],{"type":17,"tag":38,"props":81,"children":82},{"__ignoreMap":7},[83],{"type":35,"value":78},{"type":17,"tag":31,"props":85,"children":86},{},[87,89,98],{"type":35,"value":88},"不过 unicode 在日常生活中是经常应用的, 比如在 bilibili 就经常有用 Unicode 字符来弄一些标题，例如: 𝑾𝒆 𝑨𝒓𝒆 𝑳𝒐𝒔𝒆𝒓、𝓦𝓮 𝓐𝓻𝓮 𝓛𝓸𝓼𝓮𝓻 显得与众不同，有时候也会有歌名用 unicode 字符显得比较独特。这些都可以通过 ",{"type":17,"tag":90,"props":91,"children":95},"a",{"href":92,"rel":93},"https://qaz.wtf/u/convert.cgi?text=We+Are+Loser",[94],"nofollow",[96],{"type":35,"value":97},"Unicode Text Converter",{"type":35,"value":99}," 来进行生成和转换。",{"type":17,"tag":101,"props":102,"children":103},"hr",{},[],{"type":17,"tag":105,"props":106,"children":108},"h1",{"id":107},"trojan-source-1",[109],{"type":35,"value":110},"Trojan Source 1",{"type":17,"tag":26,"props":112,"children":114},{"t":113},"Trojan Source",[],{"type":17,"tag":31,"props":116,"children":117},{},[118,120,127,129,135,137,144,146,153,155,160,162,167],{"type":35,"value":119},"所以我尝试 Google 了很多次，但都是搜索不到相关的，更多的是 rust 和 go 相关的结果。之后",{"type":17,"tag":90,"props":121,"children":124},{"href":122,"rel":123},"https://github.com/liinyun",[94],[125],{"type":35,"value":126},"灵云",{"type":35,"value":128},"说这是 ",{"type":17,"tag":130,"props":131,"children":132},"strong",{},[133],{"type":35,"value":134},"UTF-8的奇妙魔力",{"type":35,"value":136},"，我才详细的了解了 unicode。并且找到了一个非常有趣的 CVE 编号，即 ",{"type":17,"tag":90,"props":138,"children":141},{"href":139,"rel":140},"https://nvd.nist.gov/vuln/detail/CVE-2021-42574",[94],[142],{"type":35,"value":143},"CVE-2021-42574",{"type":35,"value":145}," 这种类似的缺陷叫作 ",{"type":17,"tag":90,"props":147,"children":150},{"href":148,"rel":149},"https://en.wikipedia.org/wiki/Trojan_Source",[94],[151],{"type":35,"value":152},"\"Trojan Source\"",{"type":35,"value":154},"，中文直译就是 ",{"type":17,"tag":130,"props":156,"children":157},{},[158],{"type":35,"value":159},"木马来源",{"type":35,"value":161},"，泛指 ",{"type":17,"tag":130,"props":163,"children":164},{},[165],{"type":35,"value":166},"不可见的漏洞",{"type":35,"value":168},"。",{"type":17,"tag":31,"props":170,"children":171},{},[172,174,179],{"type":35,"value":173},"维基百科的解释是：\"它滥用 Unicode 的双向字符来显示源代码 ，而不是源代码的实际执行。",{"type":17,"tag":130,"props":175,"children":176},{},[177],{"type":35,"value":178},"该漏洞利用了不同阅读方向的书写脚本在计算机上的显示和编码方式。",{"type":35,"value":180},"\" 根据维基百科提供的详细信息，貌似可以快速入门 unicode。但我的计划是先阅读这本书，了解 unicode 做什么，有什么用在进一步学习。",{"type":17,"tag":31,"props":182,"children":183},{},[184,186,193],{"type":35,"value":185},"最近有了一个利用 unicode 进行供应链攻击的例子，攻击者利用 Unicode 字符插入不可见的数据，但在 Github 中看起来是和原来一样的，只是不可见。详情可以阅读 ",{"type":17,"tag":90,"props":187,"children":190},{"href":188,"rel":189},"https://github.blog/changelog/2025-05-01-github-now-provides-a-warning-about-hidden-unicode-text/",[94],[191],{"type":35,"value":192},"GitHub now provides a warning about hidden Unicode text",{"type":35,"value":194},"\n有趣的是，这一问题导致了 Github 所有使用 Unicode 特殊字符的提交被严格限制，如果提交的信息包含 unicode code，那么会有一个警告：",{"type":17,"tag":196,"props":197,"children":199},"text-tip",{"type":198},"big",[200],{"type":17,"tag":31,"props":201,"children":202},{},[203,205],{"type":35,"value":204},"This diff contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. ",{"type":17,"tag":90,"props":206,"children":209},{"href":207,"rel":208},"https://github.blog/changelog/2021-10-31-warning-about-bidirectional-unicode-text/",[94],[210],{"type":35,"value":211},"Learn more about bidirectional Unicode characters",{"type":17,"tag":101,"props":213,"children":214},{},[],{"type":17,"tag":105,"props":216,"children":218},{"id":217},"转义-3",[219],{"type":35,"value":220},"转义 3",{"type":17,"tag":26,"props":222,"children":224},{"t":223},"Unicode 转义序列",[],{"type":17,"tag":31,"props":226,"children":227},{},[228,230,237,239,244,246,257],{"type":35,"value":229},"Unicode 转义序列又称之为 Escaped Unicode characters, 可以参考 ",{"type":17,"tag":90,"props":231,"children":234},{"href":232,"rel":233},"https://en.wikipedia.org/wiki/Escape_character",[94],[235],{"type":35,"value":236},"Escape character ",{"type":35,"value":238}," ",{"type":17,"tag":130,"props":240,"children":241},{},[242],{"type":35,"value":243},"。就是说将一个字符转义成另一个编码",{"type":35,"value":245}," 的过程, 基于 Unicode 的各种编码，可以做很多事情。这也意味着需要做很多类似转义的操作，可以用在线工具或 code lang 来完成这个过程，如使用 PY 的 ",{"type":17,"tag":90,"props":247,"children":250},{"href":248,"rel":249},"https://docs.python.org/3/howto/unicode.html",[94],[251],{"type":17,"tag":38,"props":252,"children":254},{"className":253},[],[255],{"type":35,"value":256},"s.encode",{"type":35,"value":258}," 对象方法：",{"type":17,"tag":76,"props":260,"children":262},{"code":261},"s = '你好'\nunicode_str = s.encode('unicode_escape').decode()\nprint(unicode_str)  # 输出: \\u4f60\\u597d\n",[263],{"type":17,"tag":38,"props":264,"children":265},{"__ignoreMap":7},[266],{"type":35,"value":261},{"type":17,"tag":31,"props":268,"children":269},{},[270,272,278,280,287,289,295],{"type":35,"value":271},"之后，我们拿到 ",{"type":17,"tag":38,"props":273,"children":275},{"className":274},[],[276],{"type":35,"value":277},"\\u4f60\\u597d",{"type":35,"value":279}," 到 ",{"type":17,"tag":90,"props":281,"children":284},{"href":282,"rel":283},"https://gchq.github.io/CyberChef/",[94],[285],{"type":35,"value":286},"CyberChef",{"type":35,"value":288}," 来进行添加 Unicode 字符，之后将 output 结果 copy 到剪贴板中即可使用（需要添加 ",{"type":17,"tag":38,"props":290,"children":292},{"className":291},[],[293],{"type":35,"value":294},"Unescape string",{"type":35,"value":296}," 模块）例如：",{"type":17,"tag":76,"props":298,"children":300},{"code":299},"\\u5b87\\u5b99\\u65e0\\u654c\\u67e0\\u6aac\\u738b\\u2067\\uD83C\\uDF4B\n",[301],{"type":17,"tag":38,"props":302,"children":303},{"__ignoreMap":7},[304],{"type":35,"value":299},{"type":17,"tag":31,"props":306,"children":307},{},[308],{"type":35,"value":309},"这是是一串 Unicode 字符，转义成字符串就是：",{"type":17,"tag":76,"props":311,"children":313},{"code":312},"宇宙无敌柠檬王⁧🍋\n",[314],{"type":17,"tag":38,"props":315,"children":316},{"__ignoreMap":7},[317],{"type":35,"value":312},{"type":35,"value":319},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":17,"tag":321,"props":322,"children":323},"table",{},[324,358],{"type":17,"tag":325,"props":326,"children":327},"thead",{},[328],{"type":17,"tag":329,"props":330,"children":331},"tr",{},[332,338,343,348,353],{"type":17,"tag":333,"props":334,"children":335},"th",{},[336],{"type":35,"value":337},"字符",{"type":17,"tag":333,"props":339,"children":340},{},[341],{"type":35,"value":342},"名称",{"type":17,"tag":333,"props":344,"children":345},{},[346],{"type":35,"value":347},"类型",{"type":17,"tag":333,"props":349,"children":350},{},[351],{"type":35,"value":352},"bidi 类别",{"type":17,"tag":333,"props":354,"children":355},{},[356],{"type":35,"value":357},"简介说明",{"type":17,"tag":359,"props":360,"children":361},"tbody",{},[362,391,426,459,493,526,553,586,619],{"type":17,"tag":329,"props":363,"children":364},{},[365,371,376,381,386],{"type":17,"tag":366,"props":367,"children":368},"td",{},[369],{"type":35,"value":370},"u+200e",{"type":17,"tag":366,"props":372,"children":373},{},[374],{"type":35,"value":375},"left-to-right mark (lrm)",{"type":17,"tag":366,"props":377,"children":378},{},[379],{"type":35,"value":380},"cf",{"type":17,"tag":366,"props":382,"children":383},{},[384],{"type":35,"value":385},"l",{"type":17,"tag":366,"props":387,"children":388},{},[389],{"type":35,"value":390},"插入一个不可见的 ltr 方向提示符",{"type":17,"tag":329,"props":392,"children":393},{},[394,399,404,408,413],{"type":17,"tag":366,"props":395,"children":396},{},[397],{"type":35,"value":398},"u+202a",{"type":17,"tag":366,"props":400,"children":401},{},[402],{"type":35,"value":403},"left-to-right embedding (lre)",{"type":17,"tag":366,"props":405,"children":406},{},[407],{"type":35,"value":380},{"type":17,"tag":366,"props":409,"children":410},{},[411],{"type":35,"value":412},"lre",{"type":17,"tag":366,"props":414,"children":415},{},[416,418,424],{"type":35,"value":417},"开始一个嵌入式 ltr 片段，需 ",{"type":17,"tag":38,"props":419,"children":421},{"className":420},[],[422],{"type":35,"value":423},"pdf",{"type":35,"value":425}," 结束",{"type":17,"tag":329,"props":427,"children":428},{},[429,434,439,443,448],{"type":17,"tag":366,"props":430,"children":431},{},[432],{"type":35,"value":433},"u+202d",{"type":17,"tag":366,"props":435,"children":436},{},[437],{"type":35,"value":438},"left-to-right override (lro)",{"type":17,"tag":366,"props":440,"children":441},{},[442],{"type":35,"value":380},{"type":17,"tag":366,"props":444,"children":445},{},[446],{"type":35,"value":447},"lro",{"type":17,"tag":366,"props":449,"children":450},{},[451,453,458],{"type":35,"value":452},"强制后续文本以 ltr 显示，需 ",{"type":17,"tag":38,"props":454,"children":456},{"className":455},[],[457],{"type":35,"value":423},{"type":35,"value":425},{"type":17,"tag":329,"props":460,"children":461},{},[462,467,472,476,481],{"type":17,"tag":366,"props":463,"children":464},{},[465],{"type":35,"value":466},"u+2066",{"type":17,"tag":366,"props":468,"children":469},{},[470],{"type":35,"value":471},"left-to-right isolate (lri)",{"type":17,"tag":366,"props":473,"children":474},{},[475],{"type":35,"value":380},{"type":17,"tag":366,"props":477,"children":478},{},[479],{"type":35,"value":480},"lri",{"type":17,"tag":366,"props":482,"children":483},{},[484,486,492],{"type":35,"value":485},"开始 ltr 隔离段，推荐用法，需 ",{"type":17,"tag":38,"props":487,"children":489},{"className":488},[],[490],{"type":35,"value":491},"pdi",{"type":35,"value":425},{"type":17,"tag":329,"props":494,"children":495},{},[496,501,506,510,515],{"type":17,"tag":366,"props":497,"children":498},{},[499],{"type":35,"value":500},"u+2067",{"type":17,"tag":366,"props":502,"children":503},{},[504],{"type":35,"value":505},"right-to-left isolate (rli)",{"type":17,"tag":366,"props":507,"children":508},{},[509],{"type":35,"value":380},{"type":17,"tag":366,"props":511,"children":512},{},[513],{"type":35,"value":514},"rli",{"type":17,"tag":366,"props":516,"children":517},{},[518,520,525],{"type":35,"value":519},"开始 rtl 隔离段，推荐用法，需 ",{"type":17,"tag":38,"props":521,"children":523},{"className":522},[],[524],{"type":35,"value":491},{"type":35,"value":425},{"type":17,"tag":329,"props":527,"children":528},{},[529,534,539,543,548],{"type":17,"tag":366,"props":530,"children":531},{},[532],{"type":35,"value":533},"u+200f",{"type":17,"tag":366,"props":535,"children":536},{},[537],{"type":35,"value":538},"right-to-left mark (rlm)",{"type":17,"tag":366,"props":540,"children":541},{},[542],{"type":35,"value":380},{"type":17,"tag":366,"props":544,"children":545},{},[546],{"type":35,"value":547},"r",{"type":17,"tag":366,"props":549,"children":550},{},[551],{"type":35,"value":552},"插入一个不可见的 rtl 方向提示符",{"type":17,"tag":329,"props":554,"children":555},{},[556,561,566,570,575],{"type":17,"tag":366,"props":557,"children":558},{},[559],{"type":35,"value":560},"u+202b",{"type":17,"tag":366,"props":562,"children":563},{},[564],{"type":35,"value":565},"right-to-left embedding (rle)",{"type":17,"tag":366,"props":567,"children":568},{},[569],{"type":35,"value":380},{"type":17,"tag":366,"props":571,"children":572},{},[573],{"type":35,"value":574},"rle",{"type":17,"tag":366,"props":576,"children":577},{},[578,580,585],{"type":35,"value":579},"开始一个嵌入式 rtl 片段，需 ",{"type":17,"tag":38,"props":581,"children":583},{"className":582},[],[584],{"type":35,"value":423},{"type":35,"value":425},{"type":17,"tag":329,"props":587,"children":588},{},[589,594,599,603,608],{"type":17,"tag":366,"props":590,"children":591},{},[592],{"type":35,"value":593},"u+202e",{"type":17,"tag":366,"props":595,"children":596},{},[597],{"type":35,"value":598},"right-to-left override (rlo)",{"type":17,"tag":366,"props":600,"children":601},{},[602],{"type":35,"value":380},{"type":17,"tag":366,"props":604,"children":605},{},[606],{"type":35,"value":607},"rlo",{"type":17,"tag":366,"props":609,"children":610},{},[611,613,618],{"type":35,"value":612},"强制后续文本以 rtl 显示，需 ",{"type":17,"tag":38,"props":614,"children":616},{"className":615},[],[617],{"type":35,"value":423},{"type":35,"value":425},{"type":17,"tag":329,"props":620,"children":621},{},[622,627,632,637,641],{"type":17,"tag":366,"props":623,"children":624},{},[625],{"type":35,"value":626},"u+1bc77",{"type":17,"tag":366,"props":628,"children":629},{},[630],{"type":35,"value":631},"duployan affix attached... (略)",{"type":17,"tag":366,"props":633,"children":634},{},[635],{"type":35,"value":636},"lo",{"type":17,"tag":366,"props":638,"children":639},{},[640],{"type":35,"value":385},{"type":17,"tag":366,"props":642,"children":643},{},[644],{"type":35,"value":645},"杜波洛扬速记字符，天然 ltr，可显示",{"type":17,"tag":31,"props":647,"children":648},{},[649,651,657,659,666,668,674,676,683,685,692],{"type":35,"value":650},"像是 ",{"type":17,"tag":38,"props":652,"children":654},{"className":653},[],[655],{"type":35,"value":656},"\\u5b87",{"type":35,"value":658}," 这种的，一般称之为 ",{"type":17,"tag":90,"props":660,"children":663},{"href":661,"rel":662},"https://en.wikipedia.org/wiki/UTF-16",[94],[664],{"type":35,"value":665},"UTF-16",{"type":35,"value":667},",在上面的 Unicode 字符中，",{"type":17,"tag":38,"props":669,"children":671},{"className":670},[],[672],{"type":35,"value":673},"u2066",{"type":35,"value":675}," 这个系 ",{"type":17,"tag":90,"props":677,"children":680},{"href":678,"rel":679},"https://www.compart.com/en/unicode/U+2066#UNC_DB",[94],[681],{"type":35,"value":682},"LEFT-TO-RIGHT",{"type":35,"value":684}," 这个序列的，根据维基百科 ",{"type":17,"tag":90,"props":686,"children":689},{"href":687,"rel":688},"https://en.wikipedia.org/wiki/Bidirectional_text",[94],[690],{"type":35,"value":691},"Bidirectional text",{"type":35,"value":693}," 的介绍，这种被称之为 “双向文本”, 用于波斯语和阿拉伯语甚至是数学表达式。",{"type":17,"tag":31,"props":695,"children":696},{},[697,699,705,707,713],{"type":35,"value":698},"由于用了 ",{"type":17,"tag":38,"props":700,"children":702},{"className":701},[],[703],{"type":35,"value":704},"u2067",{"type":35,"value":706},", 这会导致渲染的时候会隔断 ",{"type":17,"tag":38,"props":708,"children":710},{"className":709},[],[711],{"type":35,"value":712},"🍋",{"type":35,"value":714},"，别人 @ 我的时候就会夹着消息，比如 @ 我的时候输入 Hello 就会变成：",{"type":17,"tag":76,"props":716,"children":718},{"code":717},"@宇宙无敌柠檬王 Hello 🍋\n---如果是正常的\n@宇宙无敌柠檬王🍋 Hello\n",[719],{"type":17,"tag":38,"props":720,"children":721},{"__ignoreMap":7},[722],{"type":35,"value":717},{"type":17,"tag":101,"props":724,"children":725},{},[],{"type":17,"tag":727,"props":728,"children":730},"h2",{"id":729},"字符格式-2",[731],{"type":35,"value":732},"字符格式 2",{"type":17,"tag":26,"props":734,"children":736},{"t":735},"字符格式",[],{"type":35,"value":319},{"type":17,"tag":321,"props":739,"children":740},{},[741,767],{"type":17,"tag":325,"props":742,"children":743},{},[744],{"type":17,"tag":329,"props":745,"children":746},{},[747,751,755,759,763],{"type":17,"tag":333,"props":748,"children":749},{},[750],{"type":35,"value":337},{"type":17,"tag":333,"props":752,"children":753},{},[754],{"type":35,"value":342},{"type":17,"tag":333,"props":756,"children":757},{},[758],{"type":35,"value":347},{"type":17,"tag":333,"props":760,"children":761},{},[762],{"type":35,"value":352},{"type":17,"tag":333,"props":764,"children":765},{},[766],{"type":35,"value":357},{"type":17,"tag":359,"props":768,"children":769},{},[770,793,822,851,880,909,932,961,990],{"type":17,"tag":329,"props":771,"children":772},{},[773,777,781,785,789],{"type":17,"tag":366,"props":774,"children":775},{},[776],{"type":35,"value":370},{"type":17,"tag":366,"props":778,"children":779},{},[780],{"type":35,"value":375},{"type":17,"tag":366,"props":782,"children":783},{},[784],{"type":35,"value":380},{"type":17,"tag":366,"props":786,"children":787},{},[788],{"type":35,"value":385},{"type":17,"tag":366,"props":790,"children":791},{},[792],{"type":35,"value":390},{"type":17,"tag":329,"props":794,"children":795},{},[796,800,804,808,812],{"type":17,"tag":366,"props":797,"children":798},{},[799],{"type":35,"value":398},{"type":17,"tag":366,"props":801,"children":802},{},[803],{"type":35,"value":403},{"type":17,"tag":366,"props":805,"children":806},{},[807],{"type":35,"value":380},{"type":17,"tag":366,"props":809,"children":810},{},[811],{"type":35,"value":412},{"type":17,"tag":366,"props":813,"children":814},{},[815,816,821],{"type":35,"value":417},{"type":17,"tag":38,"props":817,"children":819},{"className":818},[],[820],{"type":35,"value":423},{"type":35,"value":425},{"type":17,"tag":329,"props":823,"children":824},{},[825,829,833,837,841],{"type":17,"tag":366,"props":826,"children":827},{},[828],{"type":35,"value":433},{"type":17,"tag":366,"props":830,"children":831},{},[832],{"type":35,"value":438},{"type":17,"tag":366,"props":834,"children":835},{},[836],{"type":35,"value":380},{"type":17,"tag":366,"props":838,"children":839},{},[840],{"type":35,"value":447},{"type":17,"tag":366,"props":842,"children":843},{},[844,845,850],{"type":35,"value":452},{"type":17,"tag":38,"props":846,"children":848},{"className":847},[],[849],{"type":35,"value":423},{"type":35,"value":425},{"type":17,"tag":329,"props":852,"children":853},{},[854,858,862,866,870],{"type":17,"tag":366,"props":855,"children":856},{},[857],{"type":35,"value":466},{"type":17,"tag":366,"props":859,"children":860},{},[861],{"type":35,"value":471},{"type":17,"tag":366,"props":863,"children":864},{},[865],{"type":35,"value":380},{"type":17,"tag":366,"props":867,"children":868},{},[869],{"type":35,"value":480},{"type":17,"tag":366,"props":871,"children":872},{},[873,874,879],{"type":35,"value":485},{"type":17,"tag":38,"props":875,"children":877},{"className":876},[],[878],{"type":35,"value":491},{"type":35,"value":425},{"type":17,"tag":329,"props":881,"children":882},{},[883,887,891,895,899],{"type":17,"tag":366,"props":884,"children":885},{},[886],{"type":35,"value":500},{"type":17,"tag":366,"props":888,"children":889},{},[890],{"type":35,"value":505},{"type":17,"tag":366,"props":892,"children":893},{},[894],{"type":35,"value":380},{"type":17,"tag":366,"props":896,"children":897},{},[898],{"type":35,"value":514},{"type":17,"tag":366,"props":900,"children":901},{},[902,903,908],{"type":35,"value":519},{"type":17,"tag":38,"props":904,"children":906},{"className":905},[],[907],{"type":35,"value":491},{"type":35,"value":425},{"type":17,"tag":329,"props":910,"children":911},{},[912,916,920,924,928],{"type":17,"tag":366,"props":913,"children":914},{},[915],{"type":35,"value":533},{"type":17,"tag":366,"props":917,"children":918},{},[919],{"type":35,"value":538},{"type":17,"tag":366,"props":921,"children":922},{},[923],{"type":35,"value":380},{"type":17,"tag":366,"props":925,"children":926},{},[927],{"type":35,"value":547},{"type":17,"tag":366,"props":929,"children":930},{},[931],{"type":35,"value":552},{"type":17,"tag":329,"props":933,"children":934},{},[935,939,943,947,951],{"type":17,"tag":366,"props":936,"children":937},{},[938],{"type":35,"value":560},{"type":17,"tag":366,"props":940,"children":941},{},[942],{"type":35,"value":565},{"type":17,"tag":366,"props":944,"children":945},{},[946],{"type":35,"value":380},{"type":17,"tag":366,"props":948,"children":949},{},[950],{"type":35,"value":574},{"type":17,"tag":366,"props":952,"children":953},{},[954,955,960],{"type":35,"value":579},{"type":17,"tag":38,"props":956,"children":958},{"className":957},[],[959],{"type":35,"value":423},{"type":35,"value":425},{"type":17,"tag":329,"props":962,"children":963},{},[964,968,972,976,980],{"type":17,"tag":366,"props":965,"children":966},{},[967],{"type":35,"value":593},{"type":17,"tag":366,"props":969,"children":970},{},[971],{"type":35,"value":598},{"type":17,"tag":366,"props":973,"children":974},{},[975],{"type":35,"value":380},{"type":17,"tag":366,"props":977,"children":978},{},[979],{"type":35,"value":607},{"type":17,"tag":366,"props":981,"children":982},{},[983,984,989],{"type":35,"value":612},{"type":17,"tag":38,"props":985,"children":987},{"className":986},[],[988],{"type":35,"value":423},{"type":35,"value":425},{"type":17,"tag":329,"props":991,"children":992},{},[993,997,1001,1005,1009],{"type":17,"tag":366,"props":994,"children":995},{},[996],{"type":35,"value":626},{"type":17,"tag":366,"props":998,"children":999},{},[1000],{"type":35,"value":631},{"type":17,"tag":366,"props":1002,"children":1003},{},[1004],{"type":35,"value":636},{"type":17,"tag":366,"props":1006,"children":1007},{},[1008],{"type":35,"value":385},{"type":17,"tag":366,"props":1010,"children":1011},{},[1012],{"type":35,"value":645},{"type":17,"tag":31,"props":1014,"children":1015},{},[1016],{"type":35,"value":1017},"如果只看上面的这些描述，或者说 Unicode 的标准原文。那您肯定有很多疑惑，看不懂各种缩写，感觉超级高端和高攀不起。上面图表的原文是：",{"type":17,"tag":76,"props":1019,"children":1021},{"code":1020},"--- LEFT-TO-RIGHT\n200E;LEFT-TO-RIGHT MARK;Cf;0;L;;;;;N;;;;;\n202A;LEFT-TO-RIGHT EMBEDDING;Cf;0;LRE;;;;;N;;;;;\n202D;LEFT-TO-RIGHT OVERRIDE;Cf;0;LRO;;;;;N;;;;;\n2066;LEFT-TO-RIGHT ISOLATE;Cf;0;LRI;;;;;N;;;;;\n1BC77;DUPLOYAN AFFIX ATTACHED LEFT-TO-RIGHT SECANT;Lo;0;L;;;;;N;;;;;\n\n--- RIGHT-TO-LEFT\n2067;RIGHT-TO-LEFT ISOLATE;Cf;0;RLI;;;;;N;;;;;\n200F;RIGHT-TO-LEFT MARK;Cf;0;R;;;;;N;;;;;\n202B;RIGHT-TO-LEFT EMBEDDING;Cf;0;RLE;;;;;N;;;;;\n202E;RIGHT-TO-LEFT OVERRIDE;Cf;0;RLO;;;;;N;;;;;\n",[1022],{"type":17,"tag":38,"props":1023,"children":1024},{"__ignoreMap":7},[1025],{"type":35,"value":1020},{"type":17,"tag":31,"props":1027,"children":1028},{},[1029,1031,1038,1040,1047],{"type":35,"value":1030},"这些数据来自 ",{"type":17,"tag":90,"props":1032,"children":1035},{"href":1033,"rel":1034},"https://www.unicode.org/Public/UNIDATA/UnicodeData.txt",[94],[1036],{"type":35,"value":1037},"Unicode Character Database",{"type":35,"value":1039}," 也就是 Unicode 字符库。这些字段结构在 ",{"type":17,"tag":90,"props":1041,"children":1044},{"href":1042,"rel":1043},"https://www.unicode.org/reports/tr44/#UnicodeData.txt",[94],[1045],{"type":35,"value":1046},"UDC:Unicode® Standard Annex #44",{"type":35,"value":1048}," 中皆有说明（除非是 Unicode 相关行业的，否则需要一个一个对照。或许我会写一个转换器？)",{"type":35,"value":1050},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":17,"tag":321,"props":1052,"children":1053},{},[1054,1075],{"type":17,"tag":325,"props":1055,"children":1056},{},[1057],{"type":17,"tag":329,"props":1058,"children":1059},{},[1060,1065,1070],{"type":17,"tag":333,"props":1061,"children":1062},{},[1063],{"type":35,"value":1064},"Project",{"type":17,"tag":333,"props":1066,"children":1067},{},[1068],{"type":35,"value":1069},"Info",{"type":17,"tag":333,"props":1071,"children":1072},{},[1073],{"type":35,"value":1074},"Title",{"type":17,"tag":359,"props":1076,"children":1077},{},[1078,1094,1116],{"type":17,"tag":329,"props":1079,"children":1080},{},[1081,1086,1091],{"type":17,"tag":366,"props":1082,"children":1083},{},[1084],{"type":35,"value":1085},"数据来源",{"type":17,"tag":366,"props":1087,"children":1088},{},[1089],{"type":35,"value":1090},"UnicodeData.txt",{"type":17,"tag":366,"props":1092,"children":1093},{},[],{"type":17,"tag":329,"props":1095,"children":1096},{},[1097,1102,1111],{"type":17,"tag":366,"props":1098,"children":1099},{},[1100],{"type":35,"value":1101},"格式说明",{"type":17,"tag":366,"props":1103,"children":1104},{},[1105],{"type":17,"tag":90,"props":1106,"children":1108},{"href":1042,"rel":1107},[94],[1109],{"type":35,"value":1110},"Unicode® Standard Annex #44",{"type":17,"tag":366,"props":1112,"children":1113},{},[1114],{"type":35,"value":1115},"看懂 Unicode 的神奇魔法",{"type":17,"tag":329,"props":1117,"children":1118},{},[1119,1124,1134],{"type":17,"tag":366,"props":1120,"children":1121},{},[1122],{"type":35,"value":1123},"Bidi 类别",{"type":17,"tag":366,"props":1125,"children":1126},{},[1127],{"type":17,"tag":90,"props":1128,"children":1131},{"href":1129,"rel":1130},"https://www.unicode.org/reports/tr9/",[94],[1132],{"type":35,"value":1133},"Unicode® Standard Annex #9",{"type":17,"tag":366,"props":1135,"children":1136},{},[1137],{"type":35,"value":1138},"Unicode Bidirectional Algorithm 双向算法: 如何正确的显示从左还是从右到左的内容",{"type":17,"tag":31,"props":1140,"children":1141},{},[1142,1144,1150],{"type":35,"value":1143},"由于实在是太多了，以 ",{"type":17,"tag":38,"props":1145,"children":1147},{"className":1146},[],[1148],{"type":35,"value":1149},"200E;LEFT-TO-RIGHT MARK;Cf;0;L;;;;;N;;;;;",{"type":35,"value":1151}," 为例，如果要读懂，先拆分以更好的理解：",{"type":17,"tag":76,"props":1153,"children":1155},{"code":1154},"                                   200E;LEFT-TO-RIGHT MARK;Cf;0;L;;;;;N;;;;;\n                      Code Point-> |  200E;                                 \n      Implicit Directional Marks-> +---->  LEFT-TO-RIGHT MARK;              \n         General_Category Values-> +---->  Cf;                              \nCanonical Combining Class Values-> +---->  0;                               \n   Bidirectional Character Types->-+--+->  L;;;;;                           \n                        Bidi_Mirrored +->  N;;;;;                           \n",[1156],{"type":17,"tag":38,"props":1157,"children":1158},{"__ignoreMap":7},[1159],{"type":35,"value":1154},{"type":17,"tag":31,"props":1161,"children":1162},{},[1163],{"type":35,"value":1164},"一般需要将 #44 和 #9 切换起来查询才能理解，所以真的很需要一个转义的工具（我打算自己写一个），上面列出了一个字符格式的拆分，以及这些缩写属于那些部分的内容。一句话概述这个字符那就是：",{"type":17,"tag":196,"props":1166,"children":1167},{"type":198},[1168],{"type":17,"tag":31,"props":1169,"children":1170},{},[1171,1173,1179],{"type":35,"value":1172},"U200E 是一个",{"type":17,"tag":1174,"props":1175,"children":1176},"span",{},[1177],{"type":35,"value":1178},"从左到右的(格式控制字符)",{"type":35,"value":1180}," 尽管自身并不显示",{"type":17,"tag":1182,"props":1183,"children":1185},"text-space",{"type":1184},"tip",[1186,1200],{"type":17,"tag":31,"props":1187,"children":1188},{},[1189,1191,1195,1198],{"type":35,"value":1190},"数据文件 UnicodeData.txt 在每条记录中定义了多个属性值。\n当某个字段为空（即两个分号之间没有值）时，表示该属性使用该码点的默认值。",{"type":17,"tag":1192,"props":1193,"children":1194},"br",{},[],{"type":17,"tag":1192,"props":1196,"children":1197},{},[],{"type":35,"value":1199},"\nThe data file UnicodeData.txt defines many property values in each record.\nWhen a field in a data line for a code point is empty, that indicates that the property takes the default value for that code point.\nFor example:",{"type":17,"tag":31,"props":1201,"children":1202},{},[1203],{"type":17,"tag":38,"props":1204,"children":1205},{},[1206],{"type":35,"value":1207},"0022;QUOTATION MARK;Po;0;ON;;;;;N;;;;;",{"type":17,"tag":31,"props":1209,"children":1210},{},[1211,1213,1219,1221,1227,1229,1234],{"type":35,"value":1212},"我知道你肯定会在意 ",{"type":17,"tag":38,"props":1214,"children":1216},{"className":1215},[],[1217],{"type":35,"value":1218},"L;;;;;",{"type":35,"value":1220}," 中为什么这么多 ",{"type":17,"tag":38,"props":1222,"children":1224},{"className":1223},[],[1225],{"type":35,"value":1226},";;;",{"type":35,"value":1228}," 是不是有什么特殊含义？在 #44 中的 Empty Fields 部分说明了一些愿意，也就是说这些 ",{"type":17,"tag":38,"props":1230,"children":1232},{"className":1231},[],[1233],{"type":35,"value":1226},{"type":35,"value":1235}," 空的字段默认值：",{"title":7,"searchDepth":1237,"depth":1237,"links":1238},2,[1239],{"id":729,"depth":1237,"text":732},"markdown","content:book:unicode-explained.md","content","book/unicode-explained.md","md",1751190361801]