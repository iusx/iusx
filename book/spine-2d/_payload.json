[{"data":1,"prerenderedAt":282},["Reactive",2],{"content-query-XLLBMHGXMj":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"director":9,"time":10,"img":11,"plan":12,"body":13,"_type":277,"_id":278,"_source":279,"_file":280,"_extension":281},"/book/spine-2d","book",false,"","Spine 2D","My","2025","15/1.png","100,100",{"type":14,"children":15,"toc":273},"root",[16],{"type":17,"tag":18,"props":19,"children":24},"element","book-content",{":by":20,":img":21,":plan":22,":title":23},"director","img","plan","title",[25,30,37,72,77,82,87,92,97,112,117,121,128,132,137,178,186,189,193,200,211,225,231,245,250],{"type":17,"tag":26,"props":27,"children":29},"text-title",{":t":28},"为什么是 Spine 2D",[],{"type":17,"tag":31,"props":32,"children":33},"p",{},[34],{"type":35,"value":36},"text","市面上同类型的产品有很多，例如 Live 2D、Pixelover、Rive 甚至是 Loongbones。有些效果 Adobe 的 AE 都可以做。但我为什么选择 Spine 2D 呢？无论如何，我看一个产品的角度是很片面的。我会从以下几点看待一个产品的实力：",{"type":17,"tag":38,"props":39,"children":40},"ol",{},[41,47,52,57,62,67],{"type":17,"tag":42,"props":43,"children":44},"li",{},[45],{"type":35,"value":46},"官网设计",{"type":17,"tag":42,"props":48,"children":49},{},[50],{"type":35,"value":51},"公司 Logo",{"type":17,"tag":42,"props":53,"children":54},{},[55],{"type":35,"value":56},"宣传物料",{"type":17,"tag":42,"props":58,"children":59},{},[60],{"type":35,"value":61},"产品打磨程度",{"type":17,"tag":42,"props":63,"children":64},{},[65],{"type":35,"value":66},"定价",{"type":17,"tag":42,"props":68,"children":69},{},[70],{"type":35,"value":71},"功能",{"type":17,"tag":31,"props":73,"children":74},{},[75],{"type":35,"value":76},"一般的情况下，我会为设计买单。那么自然淘汰掉了 Loongbones。但根据产品的打磨程度来说，我认为 Spine 2D 是无可厚非的。三年前我有幸接触过 Spine 2D，我甚至没有学过，打开界面的那一刻。我就知道如何操作，如何做出交互、动画，骨骼的绑定。那么自然而然的，Live 2D 和 Spine 2D 会进入到我的决赛圈。",{"type":17,"tag":31,"props":78,"children":79},{},[80],{"type":35,"value":81},"之所以最后选择了 Spine 2D，更多的是它的 runtime 以及买断的定价、产品的打磨和稳定的 Team。虽然官网不比 Live 2D 的那么商业化，显得很「技术流」。但在游戏领域积攒了很多的口碑（在 YT 和 A 站上看到了很多大佬，🇰🇷 动画真的没的说），以及 4.2 带来的物理效果无非让 Spine 2D 上了一个台阶。无论是生态上、还是定价以及产品的打磨程度。",{"type":17,"tag":31,"props":83,"children":84},{},[85],{"type":35,"value":86},"Rive 很不错，都是很新的产品链生态，例如 Figma to Rive，而 Spine 还是 PS to Spine。Rive 的整个官网和宣发物料也很用心，特别是大量的案例和 Runtime 展示，而 Spine 有，但是很低调（官网和宣发都很低调，不如 Live 2D 和 Rive 的包装，但产品打磨的很好。）",{"type":17,"tag":31,"props":88,"children":89},{},[90],{"type":35,"value":91},"但我最后还是选择 Spine 2D（用户体验很好，还是买断制，runtime 也比较用心，虽然不是特别新，但生态和社区还是有点活力的）",{"type":17,"tag":31,"props":93,"children":94},{},[95],{"type":35,"value":96},"我是愿意为 Spine 2D 付费的。因为我可以做游戏素材，做动画、利用 runtime 做交互甚至是 GAME，可以接触和学习到 U3D\\UE、Godot 方面的技术栈。(虽然看起来是 49 年入国军，但当一个消磨时间的爱好也挺好的，会感觉时间过的很快，在没意思的时候还可以做一些鬼畜的表情取悦自己。)",{"type":17,"tag":98,"props":99,"children":101},"text-space",{"type":100},"tip",[102,107],{"type":17,"tag":31,"props":103,"children":104},{},[105],{"type":35,"value":106},"不过 Pixelover 好像没有 runtime 只能做动画，但 2D 和 3D 的结合还是很有趣的。",{"type":17,"tag":31,"props":108,"children":109},{},[110],{"type":35,"value":111},"(2025-6-22 已经买了 Pixelover，看大佬说这个是转成完美像素风图片的，然后还可以做动画，骨骼甚至是 3D，唯一缺点就是有点卡)",{"type":17,"tag":31,"props":113,"children":114},{},[115],{"type":35,"value":116},"之后如果有机会，我会选择购买并体验下 Pixelover，感觉潜力也是很大的）但像素类型貌似很深受某些公司的喜欢，因为 AI 生成的像素风格会天然的有遮瑕效果，并且规避画师讨伐的风险。",{"type":17,"tag":118,"props":119,"children":120},"hr",{},[],{"type":17,"tag":122,"props":123,"children":125},"h1",{"id":124},"runtime-1",[126],{"type":35,"value":127},"runtime 1",{"type":17,"tag":26,"props":129,"children":131},{"t":130},"Spine 2D runtime",[],{"type":17,"tag":31,"props":133,"children":134},{},[135],{"type":35,"value":136},"在此之前我们需要阅读下一些文档（Spine 2D 本地化做的挺好的，有很多 Lang。）",{"type":17,"tag":38,"props":138,"children":139},{},[140,154,166],{"type":17,"tag":42,"props":141,"children":142},{},[143,152],{"type":17,"tag":144,"props":145,"children":149},"a",{"href":146,"rel":147},"https://zh.esotericsoftware.com/spine-skeleton-viewer#Skeleton-Viewer",[148],"nofollow",[150],{"type":35,"value":151},"Skeleton Viewer",{"type":35,"value":153},": 测试从Spine导出的skeleton数据",{"type":17,"tag":42,"props":155,"children":156},{},[157,164],{"type":17,"tag":144,"props":158,"children":161},{"href":159,"rel":160},"https://zh.esotericsoftware.com/spine-json-format#JSON-%E5%AF%BC%E5%87%BA%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F",[148],[162],{"type":35,"value":163},"JSON 导出文件格式",{"type":35,"value":165},":  Spine 2D 导出后的 Json 数据格式和介绍",{"type":17,"tag":42,"props":167,"children":168},{},[169,176],{"type":17,"tag":144,"props":170,"children":173},{"href":171,"rel":172},"https://github.com/EsotericSoftware/spine-runtimes",[148],[174],{"type":35,"value":175},"spine-runtimes examples",{"type":35,"value":177},": 一些 runtime 例子和 README。",{"type":17,"tag":98,"props":179,"children":180},{"type":100},[181],{"type":17,"tag":31,"props":182,"children":183},{},[184],{"type":35,"value":185},"有一说一 Spine 2D 的 Runtime 是真的丰富哇，注释和文档都很全，很快就能上手了。",{"type":17,"tag":118,"props":187,"children":188},{},[],{"type":17,"tag":26,"props":190,"children":192},{"t":191},"bilibili 小电视练习",[],{"type":17,"tag":194,"props":195,"children":197},"h2",{"id":196},"bilibili-1",[198],{"type":35,"value":199},"bilibili 1",{"type":17,"tag":201,"props":202,"children":210},"iframe",{"width":203,"height":204,"src":205,"frameBorder":206,"allow":207,"referrerPolicy":208,"allowFullScreen":209},"100%",815,"https://stackblitz.com/edit/stackblitz-starters-b833pmbs?embed=1&file=index.html","0","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share","strict-origin-when-cross-origin",true,[],{"type":17,"tag":31,"props":212,"children":213},{},[214,216,223],{"type":35,"value":215},"不要问为什么一个注释都没有，因为我用了 ",{"type":17,"tag":144,"props":217,"children":220},{"href":218,"rel":219},"https://github.com/jiangxue-analysis/nvim.comment-hide",[148],[221],{"type":35,"value":222},"nvim.comment-hide",{"type":35,"value":224}," 把注释全部去掉了，只有我自己可以看到（Spine 2d 的 runtime 注释是非常多的，很方便学习）之所以是拿 bilibili 的小电视来练习。并不是我多么喜欢，多么高强度在这个地方冲浪。",{"type":17,"tag":226,"props":227,"children":230},"img-tip",{"text":228,"url":229},"图 1 | Octocats 盯着你的输入框.gif（超级可爱","15/img/1.gif",[],{"type":17,"tag":31,"props":232,"children":233},{},[234,236,243],{"type":35,"value":235},"更多的是看到了 Github 的 Octocats 交互设计，也就是 ",{"type":17,"tag":144,"props":237,"children":240},{"href":238,"rel":239},"https://github.com/copilot",[148],[241],{"type":35,"value":242},"copilot",{"type":35,"value":244}," 页面下那个小章鱼盯着输入框的交互。当时的我觉得非常震撼，觉得很厉害。于是我买 spine 2D 的出发点也是实现类似的效果。（庆幸的是我实现了）",{"type":17,"tag":226,"props":246,"children":249},{"text":247,"url":248},"图 2 | 在很多 blog 中很常见的看板娘","15/img/2.gif",[],{"type":17,"tag":31,"props":251,"children":252},{},[253,255,262,264,271],{"type":35,"value":254},"当然还有类似的效果，例如 ",{"type":17,"tag":144,"props":256,"children":259},{"href":257,"rel":258},"https://github.com/stevenjoezhang/live2d-widget",[148],[260],{"type":35,"value":261},"看板娘",{"type":35,"value":263}," 放到 blog，角色的表情，目光跟随鼠标的效果。之前的我看到类似的效果只知道是如何实现的，而不知道是如何做的。经过这次 Spine 2D 的学习，我已经了解了这种效果是如何实现、如果做的。通过 Spine2d runtime 让 Ik 跟随鼠标，如果点击则播放 ",{"type":17,"tag":265,"props":266,"children":268},"code",{"className":267},[],[269],{"type":35,"value":270},"blink",{"type":35,"value":272}," 动画。",{"title":7,"searchDepth":274,"depth":274,"links":275},2,[276],{"id":196,"depth":274,"text":199},"markdown","content:book:spine-2d.md","content","book/spine-2d.md","md",1750689487389]